describe("In Gomoku Logic", function(){
var gomokuGameCore;

  beforeEach(module("myApp.gameLogic"));

  beforeEach(inject(function (gameLogic) {
    gomokuGameCore = gameLogic;
  }));
	function expectMoveOk(turnIndexBeforeMove, stateBeforeMove, move) {
	    expect(gomokuGameCore.isMoveOk({turnIndexBeforeMove: turnIndexBeforeMove,
	      stateBeforeMove: stateBeforeMove,
	      move: move})).toBe(true);
	  }

	  function expectIllegalMove(turnIndexBeforeMove, stateBeforeMove, move) {
	    expect(gomokuGameCore.isMoveOk({turnIndexBeforeMove: turnIndexBeforeMove,
	      stateBeforeMove: stateBeforeMove,
	      move: move})).toBe(false);
	  }
	  it("placing X in 2x2 from initial state is legal", function() {
		    expectMoveOk(0, {},
		      [{setTurn: {turnIndex : 1}},
		        {set: {key: 'board', value:
		          [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		        {set: {key: 'delta', value: {row: 2, col: 2}}}]);
	  });
	  
	  it("placing O in 3x2 after X placed X in 2x2 is legal", function() {
		    expectMoveOk(1,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 2, col: 2}},
		      [{setTurn: {turnIndex : 0}},
		        {set: {key: 'board', value:
		        	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', 'O', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		        {set: {key: 'delta', value: {row: 3, col: 2}}}]);
		  });
	  it("placing O in 2x2, which is occupied, is illegal", function() {
		  expectIllegalMove(1,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 2, col: 2}},
		      [{setTurn: {turnIndex : 0}},
		        {set: {key: 'board', value:
		        	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', 'O', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			         ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		        {set: {key: 'delta', value: {row: 2, col: 2}}}]);
		  });
	  it("X wins by placing X in 6x6 is legal", function() {
		    expectMoveOk(0,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'O', 'X', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', 'O', 'X', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', 'O', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 6, col: 5}},
		      [{endMatch: {endMatchScores: [1, 0]}},
		            {set: {key: 'board', value:
		            	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', 'O', 'X', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', 'O', 'X', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', 'O', 'X', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 6, col: 6}}}]);
		  });
	  it("Testing checkHorizontal function, X wins by placing X in 2x6 is legal", function() {
		    expectMoveOk(0,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', 'X', 'X', 'X', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'O', 'O', 'O', 'O', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 3, col: 5}},
		      [{endMatch: {endMatchScores: [1, 0]}},
		            {set: {key: 'board', value:
		            	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'X', 'X', 'X', 'X', 'X', '', '', '', '', '', '', '', ''],
				           ['', '', 'O', 'O', 'O', 'O', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 2, col: 6}}}]);
		  });
	  it("Testing checkVertical function, X wins by placing X in 4x0 is legal", function() {
		    expectMoveOk(0,
		      {board:
		    	  [['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 3, col: 1}},
		      [{endMatch: {endMatchScores: [1, 0]}},
		            {set: {key: 'board', value:
		            	[['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 4, col: 0}}}]);
		  });
	  it("O wins by placing O in 4x4 is legal", function() {
		    expectMoveOk(1,
		      {board:
		    	  [['O', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', 'X', 'O', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', 'O', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 4, col: 3}},
		      [{endMatch: {endMatchScores: [0, 1]}},
		            {set: {key: 'board', value:
		            	[['O', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', 'O', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', 'X', 'O', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'X', 'O', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', 'X', 'O', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', 'X', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 4, col: 4}}}]);
		  });
	  it("Testing function checkForwardSlash, O wins by placing O in 2x4 is legal", function() {
		    expectMoveOk(1,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'O', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', 'O', 'X', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['O', 'X', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['X', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 5, col: 3}},
		      [{endMatch: {endMatchScores: [0, 1]}},
		            {set: {key: 'board', value:
		            	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', 'O', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', 'O', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', 'O', 'X', 'X', '', '', '', '', '', '', '', '', '', '', ''],
				           ['O', 'X', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['X', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 2, col: 4}}}]);
		  });
	  it("False winning, is illegal by placing O in 3x3", function() {
		  expectIllegalMove(1,
			      {board:
			    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', 'O', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['O', 'X', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['X', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
			           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 4, col: 3}},
			      [{endMatch: {endMatchScores: [0, 1]}},
			            {set: {key: 'board', value:
			            	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', 'O', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', 'O', 'X', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', 'O', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['O', 'X', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['X', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
					           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
			            {set: {key: 'delta', value: {row: 3, col: 3}}}]);
			  });
	  it("Only EXACT 5 connects wins, X places on 2x4 forms 6 connected Xs, expect legal move and game continues", function() {
		    expectMoveOk(0,
		      {board:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', 'X', '', 'X', 'X', 'X', '', '', '', '', '', '', ''],
		           ['', '', 'O', 'O', 'O', 'O', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', 'O', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']], delta: {row: 3, col: 2}},
		      [{setTurn: {turnIndex : 1}},
		            {set: {key: 'board', value:
		            	[['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', 'X', 'X', 'X', 'X', 'X', 'X', '', '', '', '', '', '', ''],
				           ['', '', 'O', 'O', 'O', 'O', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', 'O', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
				           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		            {set: {key: 'delta', value: {row: 2, col: 4}}}]);
		  });
	  it("the game ties when there are no more empty cells", function() {
		    expectMoveOk(0,
		      {board:
		    	  [['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
		           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', '', 'O']], delta: {row: 14, col: 14}},
		      [{endMatch: {endMatchScores: [0, 0]}},
		            {set: {key: 'board', value:
		            	[['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X'],
				           ['O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O', 'X', 'O']]}},
		            {set: {key: 'delta', value: {row: 14, col: 13}}}]);
		  });
	  it("null move is illegal", function() {
		    expectIllegalMove(0, {}, null);
		  });
	  it("move without board is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 1}}]);
		  });
	  it("move without delta is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 1}},
		      {set: {key: 'board', value:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}}]);
		  });
	  it("placing X outside the board (in 15x0) is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 1}},
		      {set: {key: 'board', value:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		      {set: {key: 'delta', value: {row: 15, col: 0}}}]);
		  });
	  it("placing X in 2x2 but setTurn to X again is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 0}},
		      {set: {key: 'board', value:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', 'X', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		      {set: {key: 'delta', value: {row: 2, col: 2}}}]);
		  });
	  it("placing X in 2x2 but setting the board wrong is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 1}},
		      {set: {key: 'board', value:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'X', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		      {set: {key: 'delta', value: {row: 2, col: 2}}}]);
		  });
	  it("placing X in 2x2 but setting two moves on board is illegal", function() {
		    expectIllegalMove(0, {}, [{setTurn: {turnIndex : 1}},
		      {set: {key: 'board', value:
		    	  [['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', 'X', 'X', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
		           ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '']]}},
		      {set: {key: 'delta', value: {row: 2, col: 2}}}]);
		  });
	  function expectLegalHistoryThatEndsTheGame(history) {
		    for (var i = 0; i < history.length; i++) {
		      expectMoveOk(history[i].turnIndexBeforeMove,
		        history[i].stateBeforeMove,
		        history[i].move);
		    }
		    expect(history[history.length - 1].move[0].endMatch).toBeDefined();
		  }

		  it("getExampleGame returns a legal history and the last move ends the game", function() {
		    var exampleGame = gomokuGameCore.getExampleGame();
		    expect(exampleGame.length).toBe(13);
		    expectLegalHistoryThatEndsTheGame(exampleGame);
		  });

		  it("getRiddles returns legal histories where the last move ends the game", function() {
		    var riddles = gomokuGameCore.getRiddles();
		    expect(riddles.length).toBe(2);
		    for (var i = 0; i < riddles.length; i++) {
		      expectLegalHistoryThatEndsTheGame(riddles[i]);
		    }
		  });
});